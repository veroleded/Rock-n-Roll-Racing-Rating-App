version: "3.8"

services:
  nextjs:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        - DATABASE_URL=${DATABASE_URL}
    container_name: rnr_racing_app_local
    env_file:
      - .env.local
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - app_network

  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot.prod
    container_name: rnr_racing_bot_local
    env_file:
      - .env.local
    depends_on:
      - postgres
    networks:
      - app_network

  postgres:
    image: postgres:16-alpine
    container_name: rnr_racing_db_local
    env_file:
      - .env.local
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: 