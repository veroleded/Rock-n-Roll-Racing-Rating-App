import { Message } from 'discord.js';
import { MESSAGES } from '../constants/messages';
import { trpc } from '../trpc';
import { Command } from '../types/command';
import { createEmbed } from '../utils/embeds';

export const topCommand: Command = {
  name: 'top',
  description: '–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–µ—Ä–≤—ã–µ 10 —á–µ–ª–æ–≤–µ–∫ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ',
  execute: async (message: Message) => {
    try {
      const { users: topPlayers } = await trpc.users.getTop.query('start');

      if (!topPlayers || topPlayers.length === 0) {
        await message.reply({
          embeds: [createEmbed.info('–ù–µ—Ç –∏–≥—Ä–æ–∫–æ–≤', '–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∏–≥—Ä–æ–∫–æ–≤ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ.')],
        });
        return;
      }

      const embed = createEmbed.top();

      const fields = topPlayers.map((player, index) => {
        const emoji = ['ü•á', 'ü•à', 'ü•â', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£', 'üîü'][index];
        const rating = player.stats?.rating || 0;
        const minRating = player.stats?.minRating || 0;
        const maxRating = player.stats?.maxRating || 0;
        const wins = player.stats?.wins || 0;
        const losses = player.stats?.losses || 0;
        const draws = player.stats?.draws || 0;
        const gamesPlayed = wins + losses + draws;
        const divs = player.stats?.totalDivisions || 0;
        const score = player.stats?.totalScore || 0;
        const winRate = gamesPlayed > 0 ? Math.round((wins / gamesPlayed) * 100) : 0;

        return {
          name: `${emoji} ${player.name}`,
          value: `‚Ä¢ Rating: ${rating} (${maxRating}‚Üí${minRating})
‚Ä¢ Games: ${gamesPlayed}, Divs: ${divs}, Winrate: ${winRate}%
‚Ä¢ Wins: ${wins}, Losses: ${losses}, Draws: ${draws}
‚Ä¢ Score: ${score}`,
          inline: false,
        };
      });

      embed.addFields(fields);
      await message.reply({ embeds: [embed] });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ !top:', error);
      await message.reply({
        embeds: [createEmbed.error('–û—à–∏–±–∫–∞', MESSAGES.ERROR.GENERAL)],
      });
    }
  },
};
