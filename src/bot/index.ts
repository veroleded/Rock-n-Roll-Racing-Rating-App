import type { AppRouter } from "@/server/root";
import { createTRPCProxyClient, httpBatchLink } from "@trpc/client";
import { createHmac } from "crypto";
import { Client, Events, GatewayIntentBits, Message } from "discord.js";
import * as dotenv from "dotenv";
import superjson from "superjson";

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç tRPC
const trpc = createTRPCProxyClient<AppRouter>({
  links: [
    httpBatchLink({
      url: `${process.env.NEXTAUTH_URL}/api/trpc`,
    }),
  ],
  transformer: superjson,
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∏
function createSignature(timestamp: string, body: string = ""): string {
  const hmac = createHmac("sha256", process.env.BOT_SECRET_KEY || "");
  return hmac.update(`${timestamp}.${body}`).digest("hex");
}

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Discord —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏
const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
  ],
});

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∫–æ–º–∞–Ω–¥
interface Command {
  name: string;
  description: string;
  execute: (message: Message) => Promise<void>;
}

// –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–∞–º–∏
class CommandHandler {
  private commands: Map<string, Command> = new Map();

  // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã
  register(command: Command) {
    this.commands.set(command.name.toLowerCase(), command);
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
  async handleMessage(message: Message) {
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤
    if (message.author.bot) return;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π
    if (!message.content.startsWith("!")) return;

    // –†–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    const args = message.content.slice(1).trim().split(/ +/);
    const commandName = args.shift()?.toLowerCase();

    if (!commandName) return;

    // –ò—â–µ–º –∫–æ–º–∞–Ω–¥—É
    const command = this.commands.get(commandName);
    if (!command) return;

    // –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
    try {
      await command.execute(message);
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã ${commandName}:`, {
        error: error,
        message: error instanceof Error ? error.message : "Unknown error",
        stack: error instanceof Error ? error.stack : undefined,
      });
      await message.reply(
        "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
      );
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
  getCommands(): Command[] {
    return Array.from(this.commands.values());
  }
}

// –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥
const commandHandler = new CommandHandler();

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É !join
commandHandler.register({
  name: "join",
  description: "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –±–æ—Ç—É",
  execute: async (message) => {
    const timestamp = Date.now().toString();

    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const statusCheck = await trpc.auth.checkBotStatus.query({
      userId: message.author.id,
      timestamp,
      signature: createSignature(timestamp),
    });

    if (statusCheck.hasJoinedBot) {
      await message.reply(
        "‚ÑπÔ∏è –í—ã —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –±–æ—Ç—É! –ú–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:\n" +
          `üåê ${process.env.NEXTAUTH_URL}`
      );
      return;
    }

    // –ü–æ–ª—É—á–∞–µ–º –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const avatar = message.author.avatar
      ? `https://cdn.discordapp.com/avatars/${message.author.id}/${message.author.avatar}.png`
      : "https://discord.com/assets/1f0bfc0865d324c2587920a7d80c609b.png";

    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const username = message.author.globalName || message.author.username;

    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    const joinData = {
      userId: message.author.id,
      username,
      avatar,
    };

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    const joinTimestamp = Date.now().toString();
    const joinSignature = createSignature(
      joinTimestamp,
      JSON.stringify(joinData)
    );

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    await trpc.auth.joinBot.mutate({
      ...joinData,
      timestamp: joinTimestamp,
      signature: joinSignature,
    });


    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let replyMessage = "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å! ";
    replyMessage += `\nüåê –í–æ–π–¥–∏—Ç–µ –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: ${process.env.NEXTAUTH_URL}`;

    await message.reply(replyMessage);
  },
});

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É !help
commandHandler.register({
  name: "help",
  description: "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥",
  execute: async (message) => {
    const commands = commandHandler.getCommands();
    let helpMessage = "üìã **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n\n";
    
    commands.forEach(cmd => {
      helpMessage += `**!${cmd.name}** - ${cmd.description}\n`;
    });
    
    await message.reply(helpMessage);
  },
});

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É !stat
commandHandler.register({
  name: "stat",
  description: "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ –∏–≥—Ä–æ–∫–∞ (–º–µ—Å—Ç–æ –≤ —Ä–µ–π—Ç–µ, –æ—á–∫–∏ —Ä–µ–π—Ç–∞, –∏–≥—Ä—ã, –¥–∏–≤–∏–∑–∏–æ–Ω—ã, –æ—á–∫–∏)",
  execute: async (message) => {
    try {
      // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const content = message.content.trim();
      let discordId = message.author.id;
      
      // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –¥—Ä—É–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      if (content.length > 5) { // !stat + –ø—Ä–æ–±–µ–ª + ID
        const mentionedId = content.slice(6).trim();
        if (mentionedId) {
          discordId = mentionedId;
        }
      }

      try {
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        const user = await trpc.users.byId.query(discordId);
        console.log(user);
        
        if (!user.stats) {
          await message.reply(`‚ÑπÔ∏è –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.name} –µ—â–µ –Ω–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.`);
          return;
        }

        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Å—Ç–∞ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ
        const allUsers = await trpc.users.list.query();
        
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
        const sortedUsers = allUsers
          .filter(u => u.stats)
          .sort((a, b) => (b.stats?.rating || 0) - (a.stats?.rating || 0));
        
        // –ù–∞—Ö–æ–¥–∏–º –º–µ—Å—Ç–æ –∏–≥—Ä–æ–∫–∞ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ
        const userRank = sortedUsers.findIndex(u => u.id === user.id) + 1;
        const rankSuffix = userRank === 1 ? "st" : userRank === 2 ? "nd" : userRank === 3 ? "rd" : "th";
        
        // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ (–∑–∞–≥–ª—É—à–∫–∞)
        const prevRating = user.stats.rating - Math.floor(Math.random() * 300); 
        const newRating = user.stats.rating;

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π —Å–æ–≥–ª–∞—Å–Ω–æ —Ñ–æ—Ä–º–∞—Ç—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
        const totalGames = user.stats.wins + user.stats.losses + user.stats.draws;
        const winRate = Math.round((user.stats.wins / (totalGames || 1)) * 100);
        
        // –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –æ –¥–∏–≤–∏–∑–∏–æ–Ω–∞—Ö –∏ –æ—á–∫–∞—Ö
        const divTotal = 2178; 
        const divWon = 1090;   
        const divLost = 968;   
        const divDraw = 120;   
        const totalScores = 3216738; 

        const statMessage = 
          `**[Rank]** Place ${userRank}${rankSuffix}, Rating ${newRating} (${prevRating}‚Üí${newRating})\n` +
          `**[Games]** Total ${totalGames}, Won ${user.stats.wins}, Lost ${user.stats.losses}, Draw ${user.stats.draws}, WR ${winRate}%\n` +
          `**[Divisions]** Total ${divTotal}, Won ${divWon}, Lost ${divLost}, Draw ${divDraw}\n` +
          `**[Scores]** Total ${totalScores}`;

        await message.reply(statMessage);
      } catch {
        await message.reply(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.`);
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ !stat:", {
        error: error,
        message: error instanceof Error ? error.message : "Unknown error",
        stack: error instanceof Error ? error.stack : undefined,
      });
      await message.reply(
        "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
      );
    }
  },
});

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É !top
commandHandler.register({
  name: "top",
  description: "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–µ—Ä–≤—ã–µ 10 —á–µ–ª–æ–≤–µ–∫ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ",
  execute: async (message) => {
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤
      const topPlayers = await trpc.users.getTop.query('start');

      if (!topPlayers || topPlayers.length === 0) {
        await message.reply("‚ÑπÔ∏è –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∏–≥—Ä–æ–∫–æ–≤ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ.");
        return;
      }

      // –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —Ä–∞–Ω–≥–æ–≤
      const rankEmojis = ['ü•á', 'ü•à', 'ü•â', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£', 'üîü'];
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–ø-10 –∏–≥—Ä–æ–∫–∞–º–∏
      let topMessage = "üèÜ **–¢–û–ü-10 –ò–ì–†–û–ö–û–í** üèÜ\n\n";
      
      topPlayers.forEach((player, index) => {
        const emoji = rankEmojis[index];
        const rating = player.stats?.rating || 0;
        const minRating = player.stats?.minRating || 0;
        const maxRating = player.stats?.maxRating || 0;
        const ratingChange = `(${minRating}‚Üí${maxRating})`;
        const wins = player.stats?.wins || 0;
        const losses = player.stats?.losses || 0;
        const draws = player.stats?.draws || 0;
        const gamesPlayed = wins + losses + draws;
        const divs = player.stats?.totalDivisions || 0;
        const score = player.stats?.totalScore || 0;
        const winRate = gamesPlayed > 0 ? Math.round((wins / gamesPlayed) * 100) : 0;
        
        // –§–æ—Ä–º–∞—Ç –≤ —Å—Ç–∏–ª–µ –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –≤ –±–ª–æ–∫–µ –∫–æ–¥–∞
        topMessage += `${emoji} **${player.name}**\n\`\`\``;
        topMessage += `‚Ä¢ Rating: ${rating} ${ratingChange}\n`;
        topMessage += `‚Ä¢ Games: ${gamesPlayed}, Divs: ${divs}, Winrate: ${winRate}%\n`;
        topMessage += `‚Ä¢ Wins: ${wins}, Losses: ${losses}, Draws: ${draws}\n`;
        topMessage += `‚Ä¢ Score: ${score}\n`;
        topMessage += `\`\`\`\n`;
      });

      await message.reply(topMessage);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ !top:", {
        error: error,
        message: error instanceof Error ? error.message : "Unknown error",
        stack: error instanceof Error ? error.stack : undefined,
      });
      await message.reply(
        "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
      );
    }
  },
});

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É !rank
commandHandler.register({
  name: "rank",
  description: "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–∑–∏—Ü–∏—é –∏–≥—Ä–æ–∫–∞ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ –∏ 5 —á–µ–ª–æ–≤–µ–∫ –Ω–∞–¥ –Ω–∏–º –∏ 5 —á–µ–ª–æ–≤–µ–∫ –ø–æ–¥ –Ω–∏–º",
  execute: async (message) => {
    try {
      // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const content = message.content.trim();
      let discordId = message.author.id;
      
      // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –¥—Ä—É–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      if (content.length > 5) { // !rank + –ø—Ä–æ–±–µ–ª + ID
        const mentionedId = content.slice(6).trim();
        if (mentionedId) {
          discordId = mentionedId;
        }
      }

      try {
        
        const neighbors = await trpc.users.getUserWithNeighbors.query(discordId);

        if (neighbors.length === 0) {
          await message.reply(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.`);
          return;
        }

        // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
        let rankMessage = "üèÜ **–†–ï–ô–¢–ò–ù–ì –ò–ì–†–û–ö–ê –ò –°–û–°–ï–î–ò** üèÜ\n\n";
        
        // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é (–ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –∏–Ω–¥–µ–∫—Å + 1)
        const startRank = 1; // –ï—Å–ª–∏ —Å–æ—Å–µ–¥–∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, —ç—Ç–æ –±—É–¥–µ—Ç –∏—Ö —Ä–∞–Ω–≥
        
        neighbors.forEach((player, index) => {
          const rating = player.stats?.rating || 0;
          const minRating = player.stats?.minRating || 0;
          const maxRating = player.stats?.maxRating || 0;
          const ratingChange = `(${minRating}‚Üí${maxRating})`;
          const wins = player.stats?.wins || 0;
          const losses = player.stats?.losses || 0;
          const draws = player.stats?.draws || 0;
          const gamesPlayed = wins + losses + draws;
          const divs = player.stats?.totalDivisions || 0;
          const score = player.stats?.totalScore || 0;
          const winRate = gamesPlayed > 0 ? Math.round((wins / gamesPlayed) * 100) : 0;
          const rank = startRank + index;
          
          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–Ω–≥–æ–≤—É—é –∏–∫–æ–Ω–∫—É
          let rankIcon = '';
          if (rank === 1) rankIcon = 'ü•á';
          else if (rank === 2) rankIcon = 'ü•à';
          else if (rank === 3) rankIcon = 'ü•â';
          else rankIcon = `${rank}`;
          
          // –ï—Å–ª–∏ —ç—Ç–æ —Ü–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –¥–æ–±–∞–≤–ª—è–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å
          const namePrefix = player.id === discordId ? '‚û°Ô∏è ' : '';
          
          // –§–æ—Ä–º–∞—Ç –≤ —Å—Ç–∏–ª–µ –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –≤ –±–ª–æ–∫–µ –∫–æ–¥–∞
          rankMessage += `${namePrefix}${rankIcon} **${player.name}**\n\`\`\``;
          rankMessage += `‚Ä¢ Rating: ${rating} ${ratingChange}\n`;
          rankMessage += `‚Ä¢ Games: ${gamesPlayed}, Divs: ${divs}, Winrate: ${winRate}%\n`;
          rankMessage += `‚Ä¢ Wins: ${wins}, Losses: ${losses}, Draws: ${draws}\n`;
          rankMessage += `‚Ä¢ Score: ${score}\n`;
          rankMessage += `\`\`\`\n`;
        });

        await message.reply(rankMessage);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤:", error);
        await message.reply(`‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤.`);
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ !rank:", {
        error: error,
        message: error instanceof Error ? error.message : "Unknown error",
        stack: error instanceof Error ? error.stack : undefined,
      });
      await message.reply(
        "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
      );
    }
  },
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
client.on(Events.MessageCreate, async (message) => {
  await commandHandler.handleMessage(message);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
client.on(Events.Error, (error) => {
  console.error("Discord client error:", error);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
client.once(Events.ClientReady, (c) => {
  console.log(`–ë–æ—Ç –≥–æ—Ç–æ–≤! –í–æ—à–µ–ª –∫–∞–∫ ${c.user.tag}`);
});

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Discord
client.login(process.env.DISCORD_BOT_TOKEN);
